/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import React, {useRef} from 'react'
import {useLoader} from 'react-three-fiber'
import {GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader'

function Watch(props) {
    const group = useRef()

    const {nodes, materials} = useLoader(GLTFLoader, 'models/watch.glb')

    // useFrame(() => (group.current.rotation.y += 0.005))

    let output

    if (props.color === 'black') {
        output = (
            <group ref={group} {...props} dispose={null}>
                <mesh material={materials.band} geometry={nodes.Strap.geometry} />
                <mesh material={materials.watch} geometry={nodes.Body.geometry} />
                <mesh material={materials.watch} geometry={nodes.Rim.geometry} />
                <mesh material={materials.metal} geometry={nodes.Dial.geometry} />
                <mesh material={materials.metal} geometry={nodes.Bars.geometry} />
                <mesh material={materials.metal} geometry={nodes.Buckle.geometry} />
                <mesh material={materials.face} geometry={nodes.Face.geometry} />
                <mesh material={materials.silver} geometry={nodes.Hands.geometry} />
                <mesh
                    material={materials.silver}
                    geometry={nodes.Numbers.geometry}
                    scale={[0.02, 0.06, 0.01]}
                />
            </group>
        )
    } else if (props.color === 'white') {
        output = (
            <group ref={group} {...props} dispose={null}>
                <mesh material={materials.silver} geometry={nodes.Strap.geometry} />
                <mesh material={materials.watch} geometry={nodes.Body.geometry} />
                <mesh material={materials.watch} geometry={nodes.Rim.geometry} />
                <mesh material={materials.metal} geometry={nodes.Dial.geometry} />
                <mesh material={materials.metal} geometry={nodes.Bars.geometry} />
                <mesh material={materials.metal} geometry={nodes.Buckle.geometry} />
                <mesh material={materials.face} geometry={nodes.Face.geometry} />
                <mesh material={materials.silver} geometry={nodes.Hands.geometry} />
                <mesh
                    material={materials.silver}
                    geometry={nodes.Numbers.geometry}
                    scale={[0.02, 0.06, 0.01]}
                />
            </group>
        )
    }

    return <>{output}</>
}

export default Watch
